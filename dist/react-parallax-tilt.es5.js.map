{"version":3,"file":"react-parallax-tilt.es5.js","sources":["../src/react-parallax-tilt/defaultProps.ts","../src/features/tilt/defaultProps.ts","../src/features/glare/defaultProps.ts","../src/common/utils.ts","../src/features/tilt/Tilt.ts","../src/features/glare/Glare.ts","../src/react-parallax-tilt/ReactParallaxTilt.tsx"],"sourcesContent":["import { Props } from './types';\nimport { defaultTiltProps } from '../features/tilt/defaultProps';\nimport { defaultGlareProps } from '../features/glare/defaultProps';\n\nexport const defaultProps: Props = {\n  scale: 1,\n  perspective: 1000,\n  flipVertically: false,\n  flipHorizontally: false,\n  reset: true,\n  transitionEasing: 'cubic-bezier(.03,.98,.52,.99)',\n  transitionSpeed: 400,\n  trackOnWindow: false,\n  gyroscope: false,\n  ...defaultTiltProps,\n  ...defaultGlareProps,\n};\n","import { TiltProps } from './types';\n\nexport const defaultTiltProps: TiltProps = {\n  tiltEnable: true,\n  tiltReverse: false,\n  tiltMaxAngleX: 20,\n  tiltMaxAngleY: 20,\n  tiltAxis: null,\n  tiltAngleXManual: null,\n  tiltAngleYManual: null,\n};\n","import { GlareProps } from './types';\n\nexport const defaultGlareProps: GlareProps = {\n  glareEnable: false,\n  glareMaxOpacity: 0.7,\n  glareColor: '#ffffff',\n  glarePosition: 'bottom',\n  glareReverse: false,\n};\n","export function setTransition<T extends HTMLElement>(\n  element: T,\n  property: string,\n  duration: number,\n  timing: string,\n  timeoutId: number | null = null,\n): number {\n  if (timeoutId) {\n    clearTimeout(timeoutId);\n  }\n  element.style.transition = `${property} ${duration}ms ${timing}`;\n  return setTimeout(() => {\n    element.style.transition = '';\n  }, duration) as any;\n}\n\nexport function constrainToRange(value: number, rangeMin: number, rangeMax: number): number {\n  return Math.min(Math.max(value, rangeMin), rangeMax);\n}\n","import { TiltProps } from './types';\nimport { constrainToRange } from '../../common/utils';\nimport { ClientPosition } from '../../common/types';\nimport { IStyle } from '../../common/IStyle';\n\nconst TILT_ANGLE_CONSTRAINT = 90;\n\nexport class Tilt<T extends HTMLElement> implements IStyle {\n  public glareAngle: number = 0;\n  public glareOpacity: number = 0;\n\n  public transitionTimeoutId: number | undefined;\n\n  public tiltAngleX: number = 0;\n  public tiltAngleY: number = 0;\n  public tiltAngleXPercentage: number = 0;\n  public tiltAngleYPercentage: number = 0;\n\n  public update = (wrapperElClientPosition: ClientPosition, props: TiltProps): void => {\n    this.updateTilt(wrapperElClientPosition, props);\n    this.updateTiltManualInput(wrapperElClientPosition, props);\n    this.updateTiltReverse(props);\n    this.updateTiltLimits(props);\n  };\n\n  private updateTilt = (wrapperElClientPosition: ClientPosition, props: TiltProps): void => {\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\n    const { tiltMaxAngleX, tiltMaxAngleY } = props;\n\n    // Calculate tilt angle x/y\n    const tiltTowardMouse = -1;\n    this.tiltAngleX = (xPercentage! * tiltMaxAngleX!) / 100;\n    this.tiltAngleY = ((yPercentage! * tiltMaxAngleY!) / 100) * tiltTowardMouse;\n  };\n\n  private updateTiltManualInput = (\n    wrapperElClientPosition: ClientPosition,\n    props: TiltProps,\n  ): void => {\n    const { tiltAngleXManual, tiltAngleYManual, tiltMaxAngleX, tiltMaxAngleY } = props;\n    // if manual input prop is passed, ignore other inputs\n    if (tiltAngleXManual !== null || tiltAngleYManual !== null) {\n      this.tiltAngleX = tiltAngleXManual !== null ? tiltAngleXManual! : 0;\n      this.tiltAngleY = tiltAngleYManual !== null ? tiltAngleYManual! : 0;\n      wrapperElClientPosition.xPercentage = (100 * this.tiltAngleX) / tiltMaxAngleX!;\n      wrapperElClientPosition.yPercentage = (100 * this.tiltAngleY) / tiltMaxAngleY!;\n    }\n  };\n\n  private updateTiltReverse = (props: TiltProps): void => {\n    const tiltReverse = props.tiltReverse ? -1 : 1;\n    this.tiltAngleX = tiltReverse * this.tiltAngleX;\n    this.tiltAngleY = tiltReverse * this.tiltAngleY;\n  };\n\n  private updateTiltLimits = (props: TiltProps): void => {\n    const { tiltAxis } = props;\n\n    // constrain tilt angles\n    this.tiltAngleX = constrainToRange(\n      this.tiltAngleX,\n      -TILT_ANGLE_CONSTRAINT,\n      TILT_ANGLE_CONSTRAINT,\n    );\n    this.tiltAngleY = constrainToRange(\n      this.tiltAngleY,\n      -TILT_ANGLE_CONSTRAINT,\n      TILT_ANGLE_CONSTRAINT,\n    );\n\n    // disable x/y axis for tilting\n    if (tiltAxis) {\n      this.tiltAngleX = tiltAxis === 'x' ? this.tiltAngleX : 0;\n      this.tiltAngleY = tiltAxis === 'y' ? this.tiltAngleY : 0;\n    }\n  };\n\n  public updateTiltAnglesPercentage = (props: TiltProps): void => {\n    const { tiltMaxAngleX, tiltMaxAngleY } = props;\n\n    this.tiltAngleXPercentage = (this.tiltAngleX / tiltMaxAngleX!) * 100;\n    this.tiltAngleYPercentage = (this.tiltAngleY / tiltMaxAngleY!) * 100;\n  };\n\n  public render = (element: T): void => {\n    element.style.transform += `rotateX(${this.tiltAngleX}deg) rotateY(${this.tiltAngleY}deg) `;\n  };\n}\n","import { GlareProps, GlareSize } from './types';\nimport { constrainToRange } from '../../common/utils';\nimport { ElementSizePosition, ClientPosition } from '../../common/types';\nimport { IStyle } from '../../common/IStyle';\n\nconst GLARE_EL_SIZE_FACTOR = 2;\n\nexport class Glare implements IStyle {\n  public glareWrapperEl: HTMLDivElement;\n  public glareEl: HTMLDivElement;\n\n  public glareAngle: number = 0;\n  public glareOpacity: number = 0;\n\n  public transitionTimeoutId: number | undefined;\n\n  constructor(wrapperElSize: ElementSizePosition) {\n    this.glareWrapperEl = document.createElement('div');\n    this.glareEl = document.createElement('div');\n    this.glareWrapperEl.appendChild(this.glareEl);\n    this.glareWrapperEl.className = 'glare-wrapper';\n    this.glareEl.className = 'glare';\n\n    const styleGlareWrapper = {\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n    };\n\n    const glareSize = this.calculateGlareSize(wrapperElSize);\n    const styleGlare = {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      'transform-origin': '0% 0%',\n      'pointer-events': 'none',\n      width: `${glareSize.width}px`,\n      height: `${glareSize.height}px`,\n    };\n\n    Object.assign(this.glareWrapperEl.style, styleGlareWrapper);\n    Object.assign(this.glareEl.style, styleGlare);\n  }\n\n  private calculateGlareSize = (wrapperElSize: ElementSizePosition): GlareSize => {\n    return {\n      width: wrapperElSize.width! * GLARE_EL_SIZE_FACTOR,\n      height: wrapperElSize.height! * GLARE_EL_SIZE_FACTOR,\n    };\n  };\n\n  public setSize = (wrapperElSize: ElementSizePosition): void => {\n    const glareSize = this.calculateGlareSize(wrapperElSize);\n    this.glareEl.style.width = `${glareSize.width}px`;\n    this.glareEl.style.height = `${glareSize.height}px`;\n  };\n\n  public update = (\n    wrapperElClientPosition: ClientPosition,\n    props: GlareProps,\n    flipVertically: boolean,\n    flipHorizontally: boolean,\n  ): void => {\n    this.updateAngle(wrapperElClientPosition, props.glareReverse!);\n    this.updateOpacity(wrapperElClientPosition, props, flipVertically, flipHorizontally);\n  };\n\n  private updateAngle = (wrapperElClientPosition: ClientPosition, glareReverse: boolean): void => {\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\n\n    const rad2Deg = 180 / Math.PI;\n    // top 0째, right +90째, bottom -+180째, left -90째\n    const glareAngle: number = xPercentage ? Math.atan2(yPercentage, -xPercentage) * rad2Deg : 0;\n\n    const addGlareAngle: number = glareReverse ? 180 : 0;\n    this.glareAngle = glareAngle - addGlareAngle;\n  };\n\n  private updateOpacity = (\n    wrapperElClientPosition: ClientPosition,\n    props: GlareProps,\n    flipVertically: boolean,\n    flipHorizontally: boolean,\n  ): void => {\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\n    const { glarePosition, glareReverse, glareMaxOpacity } = props;\n\n    const flipVerticallyFactor = flipVertically ? -1 : 1;\n    const flipHorizontallyFactor = flipHorizontally ? -1 : 1;\n\n    let glareOpacityFactor: number;\n    switch (glarePosition) {\n      case 'top':\n        glareOpacityFactor = -xPercentage! * flipVerticallyFactor;\n        break;\n      case 'right':\n        glareOpacityFactor = yPercentage! * flipHorizontallyFactor;\n        break;\n      case 'bottom':\n        glareOpacityFactor = xPercentage! * flipVerticallyFactor;\n        break;\n      case 'left':\n        glareOpacityFactor = -yPercentage! * flipHorizontallyFactor;\n        break;\n      case 'all':\n        glareOpacityFactor = Math.hypot(xPercentage, yPercentage);\n        break;\n      default:\n        glareOpacityFactor = xPercentage! * flipVerticallyFactor;\n    }\n\n    glareOpacityFactor = glareReverse ? -glareOpacityFactor : glareOpacityFactor;\n    const glareOpacityFactorRemoveNegative: number = constrainToRange(glareOpacityFactor, 0, 100);\n    this.glareOpacity = (glareOpacityFactorRemoveNegative * glareMaxOpacity!) / 100;\n  };\n\n  public render = (props: GlareProps): void => {\n    const { glareColor } = props;\n    this.glareEl.style.transform = `rotate(${this.glareAngle}deg) translate(-50%, -50%)`;\n    this.glareEl.style.opacity = this.glareOpacity.toString();\n\n    const linearGradient: string = `linear-gradient(0deg, rgba(255,255,255,0) 0%, ${glareColor} 100%)`;\n    this.glareEl.style.background = linearGradient;\n  };\n}\n","import React, { PureComponent, MouseEvent, TouchEvent } from 'react';\n\nimport { Props, SupportedEvent, EventType, CustomEventType, WrapperElement } from './types';\nimport { defaultProps } from './defaultProps';\nimport { Tilt } from '../features/tilt/Tilt';\nimport { Glare } from '../features/glare/Glare';\nimport { setTransition, constrainToRange } from '../common/utils';\n\nclass ReactParallaxTilt extends PureComponent<Props> {\n  public static defaultProps = defaultProps;\n  private wrapperEl: WrapperElement<HTMLDivElement> = {\n    node: null,\n    size: {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0,\n    },\n    clientPosition: {\n      x: null,\n      y: null,\n      xPercentage: 0,\n      yPercentage: 0,\n    },\n    transitionTimeoutId: undefined,\n    updateAnimationId: null,\n    childrenImgsCounter: 0,\n    childrenImgsLength: 0,\n    scale: 1,\n  };\n  private tilt: Tilt<HTMLDivElement> | null = null;\n  private glare: Glare | null = null;\n\n  public componentDidMount() {\n    this.loadWrapperAndChildElements();\n    this.tilt = new Tilt<HTMLDivElement>();\n    this.initGlare();\n    this.addEventListeners();\n    const autoreset = new CustomEvent<CustomEventType>('autoreset' as CustomEventType);\n    this.mainLoop(autoreset);\n  }\n\n  public componentWillUnmount() {\n    clearTimeout(this.wrapperEl.transitionTimeoutId);\n    if (this.wrapperEl.updateAnimationId !== null) {\n      cancelAnimationFrame(this.wrapperEl.updateAnimationId);\n    }\n    this.removeEventListeners();\n  }\n\n  public componentDidUpdate() {\n    const { onMove, onEnter, onLeave } = this.props;\n    // Don't request frame if callback prop changed\n    if (onMove || onEnter || onLeave) {\n      return;\n    }\n    const propChange = new CustomEvent<CustomEventType>('propchange' as CustomEventType);\n    this.mainLoop(propChange);\n  }\n\n  private addEventListeners() {\n    const { trackOnWindow, gyroscope } = this.props;\n\n    window.addEventListener('resize', this.setSize);\n\n    if (trackOnWindow) {\n      window.addEventListener('mouseenter', this.onEnter);\n      window.addEventListener('mousemove', this.onMove);\n      window.addEventListener('mouseout', this.onLeave);\n      window.addEventListener('touchstart', this.onEnter);\n      window.addEventListener('touchmove', this.onMove);\n      window.addEventListener('touchend', this.onLeave);\n    }\n\n    if (gyroscope) {\n      /* istanbul ignore next */\n      if (!window.DeviceOrientationEvent) {\n        console.error(\"Browser doesn't support Device Orientation.\");\n        return;\n      }\n      /* istanbul ignore next */\n      window.addEventListener('deviceorientation', this.onMove);\n    }\n  }\n\n  private removeEventListeners() {\n    const { trackOnWindow, gyroscope } = this.props;\n\n    window.removeEventListener('resize', this.setSize);\n\n    if (trackOnWindow) {\n      window.removeEventListener('mouseenter', this.onEnter);\n      window.removeEventListener('mousemove', this.onMove);\n      window.removeEventListener('mouseout', this.onLeave);\n      window.removeEventListener('touchstart', this.onEnter);\n      window.removeEventListener('touchmove', this.onMove);\n      window.removeEventListener('touchend', this.onLeave);\n    }\n\n    // jest - instance of DeviceOrientationEvent not possible\n    /* istanbul ignore next */\n    if (gyroscope && window.DeviceOrientationEvent) {\n      window.removeEventListener('deviceorientation', this.onMove);\n    }\n  }\n\n  private loadWrapperAndChildElements = () => {\n    const imgs = Array.from(this.wrapperEl.node!.getElementsByTagName('img'));\n    this.wrapperEl.childrenImgsLength = imgs.length;\n    if (this.wrapperEl.childrenImgsLength === 0) {\n      this.setSize();\n      return;\n    }\n\n    imgs.forEach(img => {\n      // jest - images are not preloaded\n      /* istanbul ignore next */\n      if (img.complete) {\n        this.allImagesLoaded();\n      } else {\n        img.addEventListener('load', this.allImagesLoaded);\n      }\n    });\n  };\n\n  public allImagesLoaded = () => {\n    this.wrapperEl.childrenImgsCounter++;\n    if (this.wrapperEl.childrenImgsCounter === this.wrapperEl.childrenImgsLength) {\n      this.setSize();\n    }\n  };\n\n  public setSize = () => {\n    this.setWrapperElSize();\n    if (this.glare) {\n      this.glare.setSize(this.wrapperEl.size);\n    }\n  };\n\n  private setWrapperElSize() {\n    const rect = this.wrapperEl.node!.getBoundingClientRect();\n    this.wrapperEl.size.width = this.wrapperEl.node!.offsetWidth;\n    this.wrapperEl.size.height = this.wrapperEl.node!.offsetHeight;\n    this.wrapperEl.size.left = rect.left + window.scrollX;\n    this.wrapperEl.size.top = rect.top + window.scrollY;\n  }\n\n  private initGlare() {\n    const { glareEnable } = this.props;\n\n    if (!glareEnable) {\n      return;\n    }\n\n    this.glare = new Glare(this.wrapperEl.size);\n    this.wrapperEl.node!.appendChild(this.glare.glareWrapperEl);\n  }\n\n  public mainLoop = (event: SupportedEvent) => {\n    if (this.wrapperEl.updateAnimationId !== null) {\n      cancelAnimationFrame(this.wrapperEl.updateAnimationId);\n    }\n    this.processInput(event);\n    this.update(event.type);\n    this.wrapperEl.updateAnimationId = requestAnimationFrame(this.renderFrame);\n  };\n\n  private onEnter = (event: SupportedEvent) => {\n    const { onEnter } = this.props;\n\n    // increase performance by notifying browser 'transform' property is just about to get changed\n    this.wrapperEl.node!.style.willChange = 'transform';\n    this.setTransition();\n\n    if (onEnter) {\n      onEnter(event.type);\n    }\n  };\n\n  private onMove = (event: SupportedEvent): void => {\n    this.mainLoop(event);\n    const { onMove } = this.props;\n\n    let glareAngle = 0;\n    let glareOpacity = 0;\n    if (this.glare) {\n      glareAngle = this.glare.glareAngle;\n      glareOpacity = this.glare.glareOpacity;\n    }\n    if (onMove) {\n      onMove(\n        this.tilt!.tiltAngleX!,\n        this.tilt!.tiltAngleY!,\n        this.tilt!.tiltAngleXPercentage!,\n        this.tilt!.tiltAngleYPercentage!,\n        glareAngle,\n        glareOpacity,\n        event.type,\n      );\n    }\n  };\n\n  private onLeave = (event: SupportedEvent) => {\n    const { onLeave } = this.props;\n    this.setTransition();\n\n    if (onLeave) {\n      onLeave(event.type);\n    }\n\n    if (this.props.reset) {\n      const autoResetEvent = new CustomEvent<CustomEventType>('autoreset' as CustomEventType);\n      this.onMove(autoResetEvent);\n    }\n  };\n\n  private processInput = (event: SupportedEvent): void => {\n    const { scale } = this.props;\n\n    switch (event.type as EventType) {\n      case 'mousemove':\n        this.wrapperEl.clientPosition.x = (event as MouseEvent).pageX;\n        this.wrapperEl.clientPosition.y = (event as MouseEvent).pageY;\n        this.wrapperEl.scale = scale!;\n        break;\n      case 'touchmove':\n        this.wrapperEl.clientPosition.x = (event as TouchEvent).touches[0].pageX;\n        this.wrapperEl.clientPosition.y = (event as TouchEvent).touches[0].pageY;\n        this.wrapperEl.scale = scale!;\n        break;\n      // jest - instance of DeviceOrientationEvent not possible\n      /* istanbul ignore next */\n      case 'deviceorientation':\n        this.processInputDeviceOrientation(event as DeviceOrientationEvent);\n        this.wrapperEl.scale = scale!;\n        break;\n      case 'autoreset':\n        this.wrapperEl.clientPosition.xPercentage = 0;\n        this.wrapperEl.clientPosition.yPercentage = 0;\n        this.wrapperEl.scale = 1;\n        break;\n    }\n  };\n\n  // jest - instance of DeviceOrientationEvent not possible\n  /* istanbul ignore next */\n  private processInputDeviceOrientation = (event: DeviceOrientationEvent): void => {\n    if (!event.gamma || !event.beta || !this.props.gyroscope) {\n      return;\n    }\n\n    const { tiltMaxAngleX, tiltMaxAngleY } = this.props;\n\n    const angleX = event.beta; // motion of the device around the x axis in degree in the range:[-180,180]\n    const angleY = event.gamma; // motion of the device around the y axis in degree in the range:[-90,90]\n\n    this.wrapperEl.clientPosition.xPercentage = (angleX! / tiltMaxAngleX!) * 100;\n    this.wrapperEl.clientPosition.yPercentage = (angleY! / tiltMaxAngleY!) * 100;\n\n    this.wrapperEl.clientPosition.xPercentage = constrainToRange(\n      this.wrapperEl.clientPosition.xPercentage,\n      -100,\n      100,\n    );\n    this.wrapperEl.clientPosition.yPercentage = constrainToRange(\n      this.wrapperEl.clientPosition.yPercentage,\n      -100,\n      100,\n    );\n  };\n\n  private update = (eventType: EventType | string): void => {\n    const { tiltEnable, flipVertically, flipHorizontally } = this.props;\n\n    this.updateClientInput(eventType);\n    if (tiltEnable) {\n      this.tilt!.update(this.wrapperEl.clientPosition, this.props);\n    }\n    this.updateFlip();\n    this.tilt!.updateTiltAnglesPercentage(this.props);\n    if (this.glare) {\n      this.glare.update(\n        this.wrapperEl.clientPosition,\n        this.props,\n        flipVertically!,\n        flipHorizontally!,\n      );\n    }\n  };\n\n  private updateClientInput = (eventType: EventType | string): void => {\n    // on 'autoreset' event - nothing to update, everything set to default already\n    // on 'deviceorientation' event - don't calculate tilt angle, retrieved from gyroscope\n    if (eventType === 'autoreset' || eventType === 'deviceorientation') {\n      return;\n    }\n\n    const { trackOnWindow } = this.props;\n\n    let xTemp;\n    let yTemp;\n    if (trackOnWindow) {\n      const { x, y } = this.wrapperEl.clientPosition;\n\n      xTemp = (y! / window.innerHeight) * 200 - 100;\n      yTemp = (x! / window.innerWidth) * 200 - 100;\n    } else {\n      const {\n        size: { width, height, left, top },\n        clientPosition: { x, y },\n      } = this.wrapperEl;\n\n      xTemp = ((y! - top!) / height!) * 200 - 100;\n      yTemp = ((x! - left!) / width!) * 200 - 100;\n    }\n\n    this.wrapperEl.clientPosition.xPercentage = constrainToRange(xTemp, -100, 100);\n    this.wrapperEl.clientPosition.yPercentage = constrainToRange(yTemp, -100, 100);\n  };\n\n  private updateFlip = (): void => {\n    const { flipVertically, flipHorizontally } = this.props;\n\n    if (flipVertically) {\n      this.tilt!.tiltAngleX += 180;\n      this.tilt!.tiltAngleY *= -1;\n    }\n    if (flipHorizontally) {\n      this.tilt!.tiltAngleY += 180;\n    }\n  };\n\n  public renderFrame = (): void => {\n    this.resetWrapperElTransform();\n\n    this.renderPerspective();\n    this.tilt!.render(this.wrapperEl.node!);\n    this.renderScale();\n    if (this.glare) {\n      this.glare.render(this.props);\n    }\n  };\n\n  private resetWrapperElTransform(): void {\n    this.wrapperEl.node!.style.transform = '';\n  }\n\n  private renderPerspective(): void {\n    const { perspective } = this.props;\n\n    this.wrapperEl.node!.style.transform += `perspective(${perspective}px) `;\n  }\n\n  private renderScale(): void {\n    const { scale } = this.wrapperEl;\n\n    this.wrapperEl.node!.style.transform += `scale3d(${scale},${scale},${scale})`;\n  }\n\n  private setTransition() {\n    const { transitionSpeed, transitionEasing } = this.props;\n\n    this.wrapperEl.transitionTimeoutId = setTransition<HTMLDivElement>(\n      this.wrapperEl.node!,\n      'all',\n      transitionSpeed!,\n      transitionEasing!,\n      this.wrapperEl.transitionTimeoutId,\n    );\n\n    if (this.glare) {\n      this.glare.transitionTimeoutId = setTransition<HTMLDivElement>(\n        this.glare.glareEl,\n        'opacity',\n        transitionSpeed!,\n        transitionEasing!,\n        this.glare.transitionTimeoutId,\n      );\n    }\n  }\n\n  public render() {\n    const { children, className, style } = this.props;\n    return (\n      <div\n        ref={el => (this.wrapperEl.node = el)}\n        onMouseEnter={this.onEnter}\n        onMouseMove={this.onMove}\n        onMouseLeave={this.onLeave}\n        onTouchStart={this.onEnter}\n        onTouchMove={this.onMove}\n        onTouchEnd={this.onLeave}\n        className={className}\n        style={style}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default ReactParallaxTilt;\n"],"names":["defaultProps","scale","perspective","flipVertically","flipHorizontally","reset","transitionEasing","transitionSpeed","trackOnWindow","gyroscope","tiltEnable","tiltReverse","tiltMaxAngleX","tiltMaxAngleY","tiltAxis","tiltAngleXManual","tiltAngleYManual","glareEnable","glareMaxOpacity","glareColor","glarePosition","glareReverse","setTransition","element","property","duration","timing","timeoutId","clearTimeout","style","transition","setTimeout","constrainToRange","value","rangeMin","rangeMax","Math","min","max","TILT_ANGLE_CONSTRAINT","this","wrapperElClientPosition","props","_this","updateTilt","updateTiltManualInput","updateTiltReverse","updateTiltLimits","yPercentage","tiltAngleX","tiltAngleY","xPercentage","tiltAngleXPercentage","tiltAngleYPercentage","transform","GLARE_EL_SIZE_FACTOR","wrapperElSize","width","height","glareSize","calculateGlareSize","glareEl","updateAngle","updateOpacity","rad2Deg","PI","glareAngle","atan2","glareOpacityFactor","flipVerticallyFactor","flipHorizontallyFactor","hypot","glareOpacityFactorRemoveNegative","glareOpacity","opacity","toString","background","glareWrapperEl","document","createElement","appendChild","className","styleGlare","position","top","left","transform-origin","pointer-events","Object","assign","overflow","node","size","clientPosition","x","y","transitionTimeoutId","undefined","updateAnimationId","childrenImgsCounter","childrenImgsLength","imgs","Array","from","wrapperEl","getElementsByTagName","length","forEach","img","complete","allImagesLoaded","addEventListener","setSize","setWrapperElSize","glare","event","cancelAnimationFrame","processInput","update","type","requestAnimationFrame","renderFrame","onEnter","willChange","mainLoop","onMove","tilt","onLeave","autoResetEvent","CustomEvent","pageX","pageY","touches","processInputDeviceOrientation","gamma","beta","_a","angleY","eventType","updateClientInput","updateFlip","updateTiltAnglesPercentage","xTemp","yTemp","window","innerHeight","innerWidth","_b","_c","_d","resetWrapperElTransform","renderPerspective","render","renderScale","__extends","ReactParallaxTilt","loadWrapperAndChildElements","Tilt","initGlare","addEventListeners","autoreset","removeEventListeners","propChange","DeviceOrientationEvent","console","error","removeEventListener","rect","getBoundingClientRect","offsetWidth","offsetHeight","scrollX","scrollY","Glare","React","ref","el","onMouseEnter","onMouseMove","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","PureComponent"],"mappings":"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"}